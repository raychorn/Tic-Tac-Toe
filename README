Intructions:
1. Fork this repo on GitHub
2. Create a program that can interactively play the game of Tic-Tac-Toe against a human player and never lose.
3. Commit early and often, with good messages.
4. Push your code back to GitHub and send us a pull request.

If you don't want to broadcast your intentions by forking this, feel free to clone it and work locally. Then, send us a tar.gz of your solution, including your .git folder so we can see your commit history.

We are a Django shop, but it is not a requirement that you implement your program as a Django app.

=========================================

Developer's Note:

The original requirement is badly worded if what they wanted to see what an actual Tic-Tac-Toe game capable of always
achieving a win against a human - Tic-Tac-Toe as a game was never designed to be won by any player unless someone just
doesn't get what the game is all about.  Once you have an A.I. capable of playing the game you very quickly learn how
to make that A.I. able to always block the human from winning or win once the human has gone to sleep or has forgotten
how to play.  The point of Tic-Tac-Toe is to teach us humans how pointless Tic-Tac-Toe is as a game one might enjoy
playing at a serious level.  On the other hand, once you have an A.I. able to play Tic-Tac-Toe you also have an A.I.
able to play any game based on a 2D board that features symbols or game pieces that can be moved or are stationary like
Candy Crush or Bejewled or the like; Candy Crush is like Tic-Tac-Toe in that it seeks to form groups of like pieces just
as Tic-Tac-Toe seeks to form groups of like symbols.  What Candy Crush lacks is an A.I. capable of teaching the player
how to play and win - think about this for a moment... and then notice what the source code represents and why it was
crafted.

Enjoy.
